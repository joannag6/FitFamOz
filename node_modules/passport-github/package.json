{
  "_args": [
    [
      {
        "raw": "passport-github@~1.1.0",
        "scope": null,
        "escapedName": "passport-github",
        "name": "passport-github",
        "rawSpec": "~1.1.0",
        "spec": ">=1.1.0 <1.2.0",
        "type": "range"
      },
      "/Users/banana/Desktop/UNIMELB/Y3/S1/WIT/ASSIGNMENTS/code/FitFamOz"
    ]
  ],
  "_from": "passport-github@>=1.1.0 <1.2.0",
  "_id": "passport-github@1.1.0",
  "_inCache": true,
  "_location": "/passport-github",
  "_nodeVersion": "4.2.1",
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/passport-github-1.1.0.tgz_1454461074432_0.18503738730214536"
  },
  "_npmUser": {
    "name": "jaredhanson",
    "email": "jaredhanson@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "passport-github@~1.1.0",
    "scope": null,
    "escapedName": "passport-github",
    "name": "passport-github",
    "rawSpec": "~1.1.0",
    "spec": ">=1.1.0 <1.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/passport-github/-/passport-github-1.1.0.tgz",
  "_shasum": "8ce1e3fcd61ad7578eb1df595839e4aea12355d4",
  "_shrinkwrap": null,
  "_spec": "passport-github@~1.1.0",
  "_where": "/Users/banana/Desktop/UNIMELB/Y3/S1/WIT/ASSIGNMENTS/code/FitFamOz",
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-github/issues"
  },
  "dependencies": {
    "passport-oauth2": "1.x.x"
  },
  "description": "GitHub authentication strategy for Passport.",
  "devDependencies": {
    "chai": "2.x.x",
    "chai-passport-strategy": "1.x.x",
    "make-node": "0.3.x",
    "mocha": "1.x.x",
    "proxyquire": "1.4.x"
  },
  "directories": {},
  "dist": {
    "shasum": "8ce1e3fcd61ad7578eb1df595839e4aea12355d4",
    "tarball": "https://registry.npmjs.org/passport-github/-/passport-github-1.1.0.tgz"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "gitHead": "c10321591d0521a2235613830562c2e8e2195c16",
  "homepage": "https://github.com/jaredhanson/passport-github#readme",
  "keywords": [
    "passport",
    "github",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "maintainers": [
    {
      "name": "jaredhanson",
      "email": "jaredhanson@gmail.com"
    }
  ],
  "name": "passport-github",
  "optionalDependencies": {},
  "readme": "# passport-github\n\n[![Build](https://img.shields.io/travis/jaredhanson/passport-github.svg)](https://travis-ci.org/jaredhanson/passport-github)\n[![Coverage](https://img.shields.io/coveralls/jaredhanson/passport-github.svg)](https://coveralls.io/r/jaredhanson/passport-github)\n[![Quality](https://img.shields.io/codeclimate/github/jaredhanson/passport-github.svg?label=quality)](https://codeclimate.com/github/jaredhanson/passport-github)\n[![Dependencies](https://img.shields.io/david/jaredhanson/passport-github.svg)](https://david-dm.org/jaredhanson/passport-github)\n\n\n[Passport](http://passportjs.org/) strategy for authenticating with [GitHub](https://github.com/)\nusing the OAuth 2.0 API.\n\nThis module lets you authenticate using GitHub in your Node.js applications.\nBy plugging into Passport, GitHub authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n```bash\n$ npm install passport-github\n```\n\n## Usage\n\n#### Create an Application\n\nBefore using `passport-github`, you must register an application with GitHub.\nIf you have not already done so, a new application can be created at\n[developer applications](https://github.com/settings/applications/new) within\nGitHub's settings panel.  Your application will be issued a client ID and client\nsecret, which need to be provided to the strategy.  You will also need to\nconfigure a callback URL which matches the route in your application.\n\n#### Configure Strategy\n\nThe GitHub authentication strategy authenticates users using a GitHub account\nand OAuth 2.0 tokens.  The client ID and secret obtained when creating an\napplication are supplied as options when creating the strategy.  The strategy\nalso requires a `verify` callback, which receives the access token and optional\nrefresh token, as well as `profile` which contains the authenticated user's\nGitHub profile.  The `verify` callback must call `cb` providing a user to\ncomplete authentication.\n\n```js\nvar GitHubStrategy = require('passport-github').Strategy;\n\npassport.use(new GitHubStrategy({\n    clientID: GITHUB_CLIENT_ID,\n    clientSecret: GITHUB_CLIENT_SECRET,\n    callbackURL: \"http://127.0.0.1:3000/auth/github/callback\"\n  },\n  function(accessToken, refreshToken, profile, cb) {\n    User.findOrCreate({ githubId: profile.id }, function (err, user) {\n      return cb(err, user);\n    });\n  }\n));\n```\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'github'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n```js\napp.get('/auth/github',\n  passport.authenticate('github'));\n\napp.get('/auth/github/callback', \n  passport.authenticate('github', { failureRedirect: '/login' }),\n  function(req, res) {\n    // Successful authentication, redirect home.\n    res.redirect('/');\n  });\n```\n\n## Examples\n\nDevelopers using the popular [Express](http://expressjs.com/) web framework can\nrefer to an [example](https://github.com/passport/express-4.x-facebook-example)\nas a starting point for their own web applications.  The example shows how to\nauthenticate users using Facebook.  However, because both Facebook and GitHub\nuse OAuth 2.0, the code is similar.  Simply replace references to Facebook with\ncorresponding references to GitHub.\n\n## Contributing\n\n#### Tests\n\nThe test suite is located in the `test/` directory.  All new features are\nexpected to have corresponding test cases.  Ensure that the complete test suite\npasses by executing:\n\n```bash\n$ make test\n```\n\n#### Coverage\n\nThe test suite covers 100% of the code base.  All new feature development is\nexpected to maintain that level.  Coverage reports can be viewed by executing:\n\n```bash\n$ make test-cov\n$ make view-cov\n```\n\n## Support\n\n#### Funding\n\nThis software is provided to you as open source, free of charge.  The time and\neffort to develop and maintain this project is dedicated by [@jaredhanson](https://github.com/jaredhanson).\nIf you (or your employer) benefit from this project, please consider a financial\ncontribution.  Your contribution helps continue the efforts that produce this\nand other open source software.\n\nFunds are accepted via [PayPal](https://paypal.me/jaredhanson), [Venmo](https://venmo.com/jaredhanson),\nand [other](http://jaredhanson.net/pay) methods.  Any amount is appreciated.\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2016 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/jaredhanson/passport-github.git"
  },
  "scripts": {
    "test": "mocha --require test/bootstrap/node test/*.test.js"
  },
  "version": "1.1.0"
}
