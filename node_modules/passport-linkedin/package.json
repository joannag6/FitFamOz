{
  "_args": [
    [
      {
        "raw": "passport-linkedin@~1.0.0",
        "scope": null,
        "escapedName": "passport-linkedin",
        "name": "passport-linkedin",
        "rawSpec": "~1.0.0",
        "spec": ">=1.0.0 <1.1.0",
        "type": "range"
      },
      "/Users/banana/Desktop/UNIMELB/Y3/S1/WIT/ASSIGNMENTS/code/FitFamOz"
    ]
  ],
  "_from": "passport-linkedin@>=1.0.0 <1.1.0",
  "_id": "passport-linkedin@1.0.0",
  "_inCache": true,
  "_location": "/passport-linkedin",
  "_npmUser": {
    "name": "jaredhanson",
    "email": "jaredhanson@gmail.com"
  },
  "_npmVersion": "1.4.23",
  "_phantomChildren": {},
  "_requested": {
    "raw": "passport-linkedin@~1.0.0",
    "scope": null,
    "escapedName": "passport-linkedin",
    "name": "passport-linkedin",
    "rawSpec": "~1.0.0",
    "spec": ">=1.0.0 <1.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/passport-linkedin/-/passport-linkedin-1.0.0.tgz",
  "_shasum": "e3300cf232f7e7b4b95710e238f0bb7936b5d85a",
  "_shrinkwrap": null,
  "_spec": "passport-linkedin@~1.0.0",
  "_where": "/Users/banana/Desktop/UNIMELB/Y3/S1/WIT/ASSIGNMENTS/code/FitFamOz",
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-linkedin/issues"
  },
  "dependencies": {
    "passport-oauth1": "1.x.x"
  },
  "description": "LinkedIn authentication strategy for Passport.",
  "devDependencies": {
    "vows": "0.8.x"
  },
  "directories": {},
  "dist": {
    "shasum": "e3300cf232f7e7b4b95710e238f0bb7936b5d85a",
    "tarball": "https://registry.npmjs.org/passport-linkedin/-/passport-linkedin-1.0.0.tgz"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "gitHead": "0aaae24464ad5d12b5c1e55a15936e86faf11434",
  "homepage": "https://github.com/jaredhanson/passport-linkedin#readme",
  "keywords": [
    "passport",
    "linkedin",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "maintainers": [
    {
      "name": "jaredhanson",
      "email": "jaredhanson@gmail.com"
    }
  ],
  "name": "passport-linkedin",
  "optionalDependencies": {},
  "readme": "# Passport-LinkedIn\n\n[Passport](http://passportjs.org/) strategy for authenticating with [LinkedIn](http://www.linkedin.com/)\nusing the OAuth 1.0a API.\n\nThis module lets you authenticate using LinkedIn in your Node.js applications.\nBy plugging into Passport, LinkedIn authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-linkedin\n\n## Usage\n\n#### Configure Strategy\n\nThe LinkedIn authentication strategy authenticates users using a LinkedIn\naccount and OAuth tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a consumer key, consumer secret, and callback URL.\n\n    passport.use(new LinkedInStrategy({\n        consumerKey: LINKEDIN_API_KEY,\n        consumerSecret: LINKEDIN_SECRET_KEY,\n        callbackURL: \"http://127.0.0.1:3000/auth/linkedin/callback\"\n      },\n      function(token, tokenSecret, profile, done) {\n        User.findOrCreate({ linkedinId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'linkedin'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/linkedin',\n      passport.authenticate('linkedin'));\n    \n    app.get('/auth/linkedin/callback', \n      passport.authenticate('linkedin', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n#### Extended Permissions\n\nIf you need extended permissions from the user, the permissions can be requested\nvia the `scope` option to `passport.authenticate()`.\n\nFor example, this authorization requests permission to the user's basic profile\nand email address:\n\n    app.get('/auth/linkedin',\n      passport.authenticate('linkedin', { scope: ['r_basicprofile', 'r_emailaddress'] }));\n\n#### Profile Fields\n\nThe LinkedIn profile is very rich, and may contain a lot of information.  The\nstrategy can be configured with a `profileFields` parameter which specifies a\nlist of fields your application needs.  For example, to fetch the user's ID, name,\nemail address, and headline, configure strategy like this.\n\n    passport.use(new LinkedInStrategy({\n        // clientID, clientSecret and callbackURL\n        profileFields: ['id', 'first-name', 'last-name', 'email-address', 'headline']\n      },\n      // verify callback\n    ));\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-linkedin/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport-linkedin.png)](http://travis-ci.org/jaredhanson/passport-linkedin)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-linkedin.git"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "version": "1.0.0"
}
