{
  "_args": [
    [
      {
        "raw": "passport-oauth2@1.x.x",
        "scope": null,
        "escapedName": "passport-oauth2",
        "name": "passport-oauth2",
        "rawSpec": "1.x.x",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/banana/Desktop/UNIMELB/Y3/S1/WIT/ASSIGNMENTS/code/FitFamOz/node_modules/passport-facebook"
    ]
  ],
  "_from": "passport-oauth2@>=1.0.0 <2.0.0",
  "_id": "passport-oauth2@1.4.0",
  "_inCache": true,
  "_location": "/passport-oauth2",
  "_nodeVersion": "4.2.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/passport-oauth2-1.4.0.tgz_1482264793928_0.3082614366430789"
  },
  "_npmUser": {
    "name": "jaredhanson",
    "email": "jaredhanson@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "passport-oauth2@1.x.x",
    "scope": null,
    "escapedName": "passport-oauth2",
    "name": "passport-oauth2",
    "rawSpec": "1.x.x",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/passport-facebook",
    "/passport-github",
    "/passport-google-oauth20"
  ],
  "_resolved": "https://registry.npmjs.org/passport-oauth2/-/passport-oauth2-1.4.0.tgz",
  "_shasum": "f62f81583cbe12609be7ce6f160b9395a27b86ad",
  "_shrinkwrap": null,
  "_spec": "passport-oauth2@1.x.x",
  "_where": "/Users/banana/Desktop/UNIMELB/Y3/S1/WIT/ASSIGNMENTS/code/FitFamOz/node_modules/passport-facebook",
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-oauth2/issues"
  },
  "dependencies": {
    "oauth": "0.9.x",
    "passport-strategy": "1.x.x",
    "uid2": "0.0.x",
    "utils-merge": "1.x.x"
  },
  "description": "OAuth 2.0 authentication strategy for Passport.",
  "devDependencies": {
    "chai": "2.x.x",
    "chai-passport-strategy": "1.x.x",
    "make-node": "0.3.x",
    "mocha": "2.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "f62f81583cbe12609be7ce6f160b9395a27b86ad",
    "tarball": "https://registry.npmjs.org/passport-oauth2/-/passport-oauth2-1.4.0.tgz"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "gitHead": "a02839afb8d15f7d283ae09167973e4d22e8faf8",
  "homepage": "https://github.com/jaredhanson/passport-oauth2#readme",
  "keywords": [
    "passport",
    "auth",
    "authn",
    "authentication",
    "authz",
    "authorization",
    "oauth",
    "oauth2"
  ],
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "maintainers": [
    {
      "name": "jaredhanson",
      "email": "jaredhanson@gmail.com"
    }
  ],
  "name": "passport-oauth2",
  "optionalDependencies": {},
  "readme": "# passport-oauth2\n\n[![Build](https://img.shields.io/travis/jaredhanson/passport-oauth2.svg)](https://travis-ci.org/jaredhanson/passport-oauth2)\n[![Coverage](https://img.shields.io/coveralls/jaredhanson/passport-oauth2.svg)](https://coveralls.io/r/jaredhanson/passport-oauth2)\n[![Quality](https://img.shields.io/codeclimate/github/jaredhanson/passport-oauth2.svg?label=quality)](https://codeclimate.com/github/jaredhanson/passport-oauth2)\n[![Dependencies](https://img.shields.io/david/jaredhanson/passport-oauth2.svg)](https://david-dm.org/jaredhanson/passport-oauth2)\n\n\nGeneral-purpose OAuth 2.0 authentication strategy for [Passport](http://passportjs.org/).\n\nThis module lets you authenticate using OAuth 2.0 in your Node.js applications.\nBy plugging into Passport, OAuth 2.0 authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\nNote that this strategy provides generic OAuth 2.0 support.  In many cases, a\nprovider-specific strategy can be used instead, which cuts down on unnecessary\nconfiguration, and accommodates any provider-specific quirks.  See the\n[list](https://github.com/jaredhanson/passport/wiki/Strategies) for supported\nproviders.\n\nDevelopers who need to implement authentication against an OAuth 2.0 provider\nthat is not already supported are encouraged to sub-class this strategy.  If you\nchoose to open source the new provider-specific strategy, please add it to the\nlist so other people can find it.\n\n## Install\n\n    $ npm install passport-oauth2\n\n## Usage\n\n#### Configure Strategy\n\nThe OAuth 2.0 authentication strategy authenticates users using a third-party\naccount and OAuth 2.0 tokens.  The provider's OAuth 2.0 endpoints, as well as\nthe client identifer and secret, are specified as options.  The strategy\nrequires a `verify` callback, which receives an access token and profile,\nand calls `cb` providing a user.\n\n```js\npassport.use(new OAuth2Strategy({\n    authorizationURL: 'https://www.example.com/oauth2/authorize',\n    tokenURL: 'https://www.example.com/oauth2/token',\n    clientID: EXAMPLE_CLIENT_ID,\n    clientSecret: EXAMPLE_CLIENT_SECRET,\n    callbackURL: \"http://localhost:3000/auth/example/callback\"\n  },\n  function(accessToken, refreshToken, profile, cb) {\n    User.findOrCreate({ exampleId: profile.id }, function (err, user) {\n      return cb(err, user);\n    });\n  }\n));\n```\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'oauth2'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n```js\napp.get('/auth/example',\n  passport.authenticate('oauth2'));\n\napp.get('/auth/example/callback',\n  passport.authenticate('oauth2', { failureRedirect: '/login' }),\n  function(req, res) {\n    // Successful authentication, redirect home.\n    res.redirect('/');\n  });\n```\n\n## Related Modules\n\n- [passport-oauth1](https://github.com/jaredhanson/passport-oauth1) — OAuth 1.0 authentication strategy\n- [passport-http-bearer](https://github.com/jaredhanson/passport-http-bearer) — Bearer token authentication strategy for APIs\n- [OAuth2orize](https://github.com/jaredhanson/oauth2orize) — OAuth 2.0 authorization server toolkit\n\n## Contributing\n\n#### Tests\n\nThe test suite is located in the `test/` directory.  All new features are\nexpected to have corresponding test cases.  Ensure that the complete test suite\npasses by executing:\n\n```bash\n$ make test\n```\n\n#### Coverage\n\nAll new feature development is expected to have test coverage.  Patches that\nincrese test coverage are happily accepted.  Coverage reports can be viewed by\nexecuting:\n\n```bash\n$ make test-cov\n$ make view-cov\n```\n\n## Support\n\n#### Funding\n\nThis software is provided to you as open source, free of charge.  The time and\neffort to develop and maintain this project is dedicated by [@jaredhanson](https://github.com/jaredhanson).\nIf you (or your employer) benefit from this project, please consider a financial\ncontribution.  Your contribution helps continue the efforts that produce this\nand other open source software.\n\nFunds are accepted via [PayPal](https://paypal.me/jaredhanson), [Venmo](https://venmo.com/jaredhanson),\nand [other](http://jaredhanson.net/pay) methods.  Any amount is appreciated.\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2016 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-oauth2.git"
  },
  "scripts": {
    "test": "mocha --reporter spec --require test/bootstrap/node test/*.test.js test/**/*.test.js"
  },
  "version": "1.4.0"
}
